#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dao
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_a8f702_carrefour")]
	public partial class UsuariosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMENU(MENU instance);
    partial void UpdateMENU(MENU instance);
    partial void DeleteMENU(MENU instance);
    #endregion
		
		public UsuariosDataContext() : 
				base(global::Dao.Properties.Settings.Default.db_a8f702_carrefourConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UsuariosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsuariosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsuariosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsuariosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MENU> MENUs
		{
			get
			{
				return this.GetTable<MENU>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU")]
	public partial class MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOME_REPORT;
		
		private string _CONTROLLER;
		
		private string _PROCEDURE;
		
		private System.Nullable<bool> _INDICA_INATIVO;
		
		private System.Nullable<int> _ORDEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOME_REPORTChanging(string value);
    partial void OnNOME_REPORTChanged();
    partial void OnCONTROLLERChanging(string value);
    partial void OnCONTROLLERChanged();
    partial void OnPROCEDUREChanging(string value);
    partial void OnPROCEDUREChanged();
    partial void OnINDICA_INATIVOChanging(System.Nullable<bool> value);
    partial void OnINDICA_INATIVOChanged();
    partial void OnORDEMChanging(System.Nullable<int> value);
    partial void OnORDEMChanged();
    #endregion
		
		public MENU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME_REPORT", DbType="VarChar(50)")]
		public string NOME_REPORT
		{
			get
			{
				return this._NOME_REPORT;
			}
			set
			{
				if ((this._NOME_REPORT != value))
				{
					this.OnNOME_REPORTChanging(value);
					this.SendPropertyChanging();
					this._NOME_REPORT = value;
					this.SendPropertyChanged("NOME_REPORT");
					this.OnNOME_REPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTROLLER", DbType="VarChar(50)")]
		public string CONTROLLER
		{
			get
			{
				return this._CONTROLLER;
			}
			set
			{
				if ((this._CONTROLLER != value))
				{
					this.OnCONTROLLERChanging(value);
					this.SendPropertyChanging();
					this._CONTROLLER = value;
					this.SendPropertyChanged("CONTROLLER");
					this.OnCONTROLLERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PROCEDURE]", Storage="_PROCEDURE", DbType="VarChar(50)")]
		public string PROCEDURE
		{
			get
			{
				return this._PROCEDURE;
			}
			set
			{
				if ((this._PROCEDURE != value))
				{
					this.OnPROCEDUREChanging(value);
					this.SendPropertyChanging();
					this._PROCEDURE = value;
					this.SendPropertyChanged("PROCEDURE");
					this.OnPROCEDUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDICA_INATIVO", DbType="Bit")]
		public System.Nullable<bool> INDICA_INATIVO
		{
			get
			{
				return this._INDICA_INATIVO;
			}
			set
			{
				if ((this._INDICA_INATIVO != value))
				{
					this.OnINDICA_INATIVOChanging(value);
					this.SendPropertyChanging();
					this._INDICA_INATIVO = value;
					this.SendPropertyChanged("INDICA_INATIVO");
					this.OnINDICA_INATIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDEM", DbType="Int")]
		public System.Nullable<int> ORDEM
		{
			get
			{
				return this._ORDEM;
			}
			set
			{
				if ((this._ORDEM != value))
				{
					this.OnORDEMChanging(value);
					this.SendPropertyChanging();
					this._ORDEM = value;
					this.SendPropertyChanged("ORDEM");
					this.OnORDEMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
